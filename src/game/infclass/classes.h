#ifndef GAME_SERVER_CLASSES_H
#define GAME_SERVER_CLASSES_H

template<class T, int StackCapacity>
class icArray;

enum PLAYERCLASS
{
	PLAYERCLASS_INVALID = -1,
	PLAYERCLASS_RANDOM = 0,
	PLAYERCLASS_NONE = 0,
	
	START_HUMANCLASS,
	PLAYERCLASS_MERCENARY,
	PLAYERCLASS_MEDIC,
	PLAYERCLASS_HERO,
	PLAYERCLASS_ENGINEER,
	PLAYERCLASS_SOLDIER,
	PLAYERCLASS_NINJA,
	PLAYERCLASS_SNIPER,
	PLAYERCLASS_SCIENTIST,
	PLAYERCLASS_BIOLOGIST,
	PLAYERCLASS_LOOPER,
	END_HUMANCLASS,
	
	START_INFECTEDCLASS,
	PLAYERCLASS_SMOKER,
	PLAYERCLASS_BOOMER,
	PLAYERCLASS_HUNTER,
	PLAYERCLASS_BAT,
	PLAYERCLASS_GHOST,
	PLAYERCLASS_SPIDER,
	PLAYERCLASS_GHOUL,
	PLAYERCLASS_SLUG,
	PLAYERCLASS_VOODOO,
	PLAYERCLASS_WITCH,
	PLAYERCLASS_UNDEAD,
	END_INFECTEDCLASS,
};

constexpr int NB_PLAYERCLASS = END_INFECTEDCLASS + 1;
constexpr int NB_HUMANCLASS = END_HUMANCLASS - START_HUMANCLASS - 1;
constexpr int NB_INFECTEDCLASS = END_INFECTEDCLASS - START_INFECTEDCLASS - 1;

const icArray<PLAYERCLASS, NB_PLAYERCLASS> &AllPlayerClasses();
const icArray<PLAYERCLASS, NB_HUMANCLASS> &AllHumanClasses();
const icArray<PLAYERCLASS, NB_INFECTEDCLASS> &AllInfectedClasses();

inline bool IsHumanClass(int c)
{
	return !(c > END_HUMANCLASS);
}

inline bool IsInfectedClass(int c)
{
	return c > END_HUMANCLASS;
}

#endif
